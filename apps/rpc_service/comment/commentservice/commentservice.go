// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package commentservice

import (
	"context"

	"snkrs/apps/rpc_service/comment/comment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommentItem      = comment.CommentItem
	CommentsRequest  = comment.CommentsRequest
	CommentsResponse = comment.CommentsResponse

	CommentService interface {
		Comments(ctx context.Context, in *CommentsRequest, opts ...grpc.CallOption) (*CommentsResponse, error)
	}

	defaultCommentService struct {
		cli zrpc.Client
	}
)

func NewCommentService(cli zrpc.Client) CommentService {
	return &defaultCommentService{
		cli: cli,
	}
}

func (m *defaultCommentService) Comments(ctx context.Context, in *CommentsRequest, opts ...grpc.CallOption) (*CommentsResponse, error) {
	client := comment.NewCommentServiceClient(m.cli.Conn())
	return client.Comments(ctx, in, opts...)
}
