// Code generated by goctl. DO NOT EDIT.
// Source: reserve.proto

package reserveservice

import (
	"context"

	"snkrs/apps/rpc_service/reserve/rpc/reserve"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Product              = reserve.Product
	ReserveOrderRequest  = reserve.ReserveOrderRequest
	ReserveOrderResponse = reserve.ReserveOrderResponse

	ReserveService interface {
		ReserveOrder(ctx context.Context, in *ReserveOrderRequest, opts ...grpc.CallOption) (*ReserveOrderResponse, error)
	}

	defaultReserveService struct {
		cli zrpc.Client
	}
)

func NewReserveService(cli zrpc.Client) ReserveService {
	return &defaultReserveService{
		cli: cli,
	}
}

func (m *defaultReserveService) ReserveOrder(ctx context.Context, in *ReserveOrderRequest, opts ...grpc.CallOption) (*ReserveOrderResponse, error) {
	client := reserve.NewReserveServiceClient(m.cli.Conn())
	return client.ReserveOrder(ctx, in, opts...)
}
