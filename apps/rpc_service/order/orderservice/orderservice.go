// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package orderservice

import (
	"context"

	"snkrs/apps/rpc_service/order/order"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	OrderItem      = order.OrderItem
	OrdersRequest  = order.OrdersRequest
	OrdersResponse = order.OrdersResponse

	OrderService interface {
		Orders(ctx context.Context, in *OrdersRequest, opts ...grpc.CallOption) (*OrdersResponse, error)
	}

	defaultOrderService struct {
		cli zrpc.Client
	}
)

func NewOrderService(cli zrpc.Client) OrderService {
	return &defaultOrderService{
		cli: cli,
	}
}

func (m *defaultOrderService) Orders(ctx context.Context, in *OrdersRequest, opts ...grpc.CallOption) (*OrdersResponse, error) {
	client := order.NewOrderServiceClient(m.cli.Conn())
	return client.Orders(ctx, in, opts...)
}
